
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '96190D0CDBF0A80C2B7C0F681B9BB2F1'
    
_lr_action_items = {'K_STRING':([155,158,235,254,256,],[200,200,200,200,200,]),'K_IF':([23,25,45,46,51,53,58,60,61,64,65,73,74,76,77,86,88,89,92,98,113,117,118,120,121,141,143,144,159,180,184,218,219,222,224,227,232,241,243,247,248,251,258,266,273,278,],[43,-91,43,-123,-97,-116,-126,-125,-122,-96,-114,-98,-112,-127,-115,-113,-124,-94,-33,-34,-21,43,-35,-95,-90,-136,-129,-153,-101,43,-152,-41,242,43,43,-138,43,-112,-117,-145,-144,-146,43,-118,242,242,]),'K_CLASS':([0,2,3,4,6,7,9,11,12,14,16,17,19,21,24,100,113,114,121,],[-128,-3,-2,8,-4,-5,8,-8,-10,-9,-6,-88,-7,-17,-11,-89,-21,-20,-90,]),'K_WHILE':([23,25,45,46,51,53,58,60,61,64,65,73,74,76,77,86,88,89,92,98,113,117,118,120,121,141,143,144,159,180,184,218,219,222,224,227,232,241,243,247,248,251,258,266,273,278,],[67,-91,67,-123,-97,-116,-126,-125,-122,-96,-114,-98,-112,-127,-115,-113,-124,-94,-33,-34,-21,67,-35,-95,-90,-136,-129,-153,-101,67,-152,-41,67,67,67,-138,67,-112,-117,-145,-144,-146,67,-118,67,67,]),'K_WITH':([31,107,],[107,107,]),'K_INT':([155,158,235,254,256,],[202,202,202,202,202,]),'K_UNIT':([155,158,235,254,256,],[203,203,203,203,203,]),'IMPLIES':([17,44,47,48,50,52,57,68,69,70,71,72,75,79,83,84,90,91,93,95,97,100,126,127,128,129,153,165,166,167,168,170,172,175,176,177,178,179,185,186,187,193,226,230,245,],[-88,-67,-75,-69,-66,-49,-42,-71,-52,-81,-43,-78,-79,-47,-60,-80,-74,-77,-57,-45,-76,-89,-64,-70,-72,-68,-65,-54,-55,-56,-53,-44,-73,-59,-58,-46,-51,-50,-61,-62,-63,-48,248,-83,-82,]),'INT':([23,25,45,46,51,53,55,56,58,60,61,63,64,65,73,74,76,77,86,87,88,89,92,98,99,113,117,118,119,120,121,122,123,124,125,130,134,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,159,160,169,171,180,182,184,218,219,222,224,227,229,232,241,243,247,248,250,251,252,258,259,266,268,269,270,273,275,278,],[70,-91,70,-123,-97,-116,70,70,-126,-125,-122,70,-96,-114,-98,-112,-127,-115,-113,70,-124,-94,-33,-34,70,-21,70,-35,70,-95,-90,70,70,70,70,70,70,70,70,70,70,70,70,-136,-129,-153,70,70,70,70,70,70,-101,70,70,70,70,70,-152,-41,70,70,70,-138,70,70,-112,-117,-145,-144,70,-146,70,70,70,-118,-151,-150,70,70,277,70,]),'LESS_THAN':([17,44,47,48,50,52,68,69,70,72,75,78,83,84,90,91,93,94,97,100,126,127,128,129,153,165,166,167,168,172,175,176,178,179,185,186,187,230,231,245,],[-88,-67,-75,-69,-66,123,-71,-52,-81,-78,-79,-72,-60,-80,-74,-77,-57,-70,-76,-89,-64,-70,-72,-68,-65,-54,-55,-56,-53,-73,-59,-58,123,123,-61,-62,-63,-83,-82,-82,]),'STRING':([23,25,45,46,51,53,55,56,58,60,61,63,64,65,73,74,76,77,86,87,88,89,92,98,99,113,117,118,119,120,121,122,123,124,125,130,134,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,159,160,169,171,180,182,184,218,219,222,224,227,229,232,241,243,247,248,250,251,252,258,259,266,268,269,270,273,278,],[47,-91,47,-123,-97,-116,47,47,-126,-125,-122,47,-96,-114,-98,-112,-127,-115,-113,47,-124,-94,-33,-34,47,-21,47,-35,47,-95,-90,47,47,47,47,47,47,47,47,47,47,47,47,-136,-129,-153,47,47,47,47,47,47,-101,47,47,47,47,47,-152,-41,47,47,47,-138,47,47,-112,-117,-145,-144,47,-146,47,47,47,-118,-151,-150,47,47,47,]),'EQUAL':([17,44,47,48,50,52,68,69,70,72,75,78,79,83,84,90,91,93,94,97,100,126,127,128,129,153,165,166,167,168,172,175,176,178,179,185,186,187,193,230,231,245,],[-88,-67,-75,-69,-66,-49,-71,-52,-81,-78,-79,-72,140,-60,-80,-74,-77,-57,-70,-76,-89,-64,-70,-72,-68,-65,-54,-55,-56,-53,-73,-59,-58,-51,-50,-61,-62,-63,140,-83,-82,-82,]),'DOT':([16,17,94,100,127,131,],[26,-88,26,-89,26,26,]),'K_NULL':([23,25,45,46,51,53,55,56,58,60,61,63,64,65,73,74,76,77,86,87,88,89,92,98,99,113,117,118,119,120,121,122,123,124,125,130,134,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,159,160,169,171,180,182,184,218,219,222,224,227,229,232,241,243,247,248,250,251,252,258,259,266,268,269,270,273,278,],[75,-91,75,-123,-97,-116,75,75,-126,-125,-122,75,-96,-114,-98,-112,-127,-115,-113,75,-124,-94,-33,-34,75,-21,75,-35,75,-95,-90,75,75,75,75,75,75,75,75,75,75,75,75,-136,-129,-153,75,75,75,75,75,75,-101,75,75,75,75,75,-152,-41,75,75,75,-138,75,75,-112,-117,-145,-144,75,-146,75,75,75,-118,-151,-150,75,75,75,]),'K_ARRAY':([155,158,214,235,254,256,],[209,209,237,209,209,209,]),'K_LIST':([155,158,235,254,256,],[199,199,199,199,199,]),'K_FLOAT':([155,158,235,254,256,],[205,205,205,205,205,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'single_switch_statement_header':([142,183,],[180,180,]),'switch':([23,45,117,180,219,222,224,232,258,273,278,],[46,46,46,46,46,46,46,46,46,46,46,]),'single_inner_switch_statement':([142,183,],[181,228,]),'class_body_declaration':([22,38,],[32,116,]),'method_body':([42,],[118,]),'type':([155,158,235,254,256,],[204,211,253,263,264,]),'multiple_inner_switch_statement':([142,],[183,]),'postfix_expression':([23,45,55,56,63,87,99,117,119,122,123,124,125,130,134,135,136,137,138,139,140,146,147,148,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'block_statement_list':([23,117,180,],[45,45,224,]),'array_initializer':([160,],[212,]),'class_begin_bracket':([18,],[28,]),'statement_no_short_if':([219,273,278,],[240,276,280,]),'basic_type':([155,158,235,254,256,],[207,207,207,207,207,]),'block_body':([23,117,],[49,163,]),'variable_body':([33,238,],[110,255,]),'postfix_not_expression':([23,45,55,56,63,87,99,117,119,122,123,124,125,130,134,135,136,137,138,139,140,146,147,148,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'method_declaration':([22,23,38,45,117,180,224,],[36,51,36,51,51,51,51,]),'for_loop':([23,45,117,180,219,222,224,232,258,273,278,],[53,53,53,53,53,53,53,53,53,53,53,]),'literal':([23,45,55,56,63,87,99,117,119,122,123,124,125,130,134,135,136,137,138,139,140,146,147,148,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'class_declaration':([4,9,],[12,12,]),'compilation_unit':([0,],[1,]),'class_body_declarations':([22,],[38,]),'empty':([0,20,22,23,28,117,149,152,154,162,171,],[2,30,40,54,104,54,189,197,30,104,189,]),'method_return_type':([256,],[265,]),'or_expression':([23,45,63,87,117,119,134,135,149,150,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[57,57,57,57,57,57,173,57,57,57,57,57,57,57,57,57,57,57,57,57,260,57,57,57,57,57,57,]),'return_statement':([23,45,117,180,219,222,224,232,258,273,278,],[58,58,58,58,58,58,58,58,58,58,58,]),'argument_header':([28,162,],[101,217,]),'statement':([23,45,117,180,219,222,224,232,258,273,278,],[73,73,73,73,243,247,73,251,266,243,266,]),'variable_header':([22,23,38,45,117,152,180,224,],[33,33,33,33,33,195,33,33,]),'array_datatype':([155,158,235,254,256,],[201,201,201,201,201,]),'blank_statement':([23,45,117,180,219,222,224,232,258,273,278,],[60,60,60,60,60,60,60,60,60,60,60,]),'import_declarations':([0,],[3,]),'ObjectDeclare':([4,9,],[15,15,]),'block':([15,23,45,117,180,219,222,224,232,258,273,278,],[24,61,61,61,61,61,61,61,61,61,61,61,]),'relational_expression':([23,45,63,87,117,119,130,134,135,138,139,140,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[52,52,52,52,52,52,52,52,52,52,178,179,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'single_switch_statement_body':([180,],[223,]),'class_header':([4,9,],[13,13,]),'class_type':([31,107,],[108,157,]),'argument_list_extras':([149,171,],[191,221,]),'expression':([23,45,63,87,117,119,135,149,150,160,169,171,180,182,219,222,224,229,232,252,258,259,270,273,278,],[62,62,133,145,62,164,174,190,192,216,220,190,225,226,62,62,62,249,62,261,62,267,274,62,62,]),'classes_objects_list':([4,],[9,]),'switch_header':([23,45,117,180,219,222,224,232,258,273,278,],[80,80,80,80,80,80,80,80,80,80,80,]),'local_variable':([22,23,38,45,117,180,224,],[41,64,41,64,64,64,64,]),'if_then_else_statement':([23,45,117,180,219,222,224,232,258,273,278,],[65,65,65,65,65,65,65,65,65,65,65,]),'method_header':([22,23,38,45,117,180,224,],[42,42,42,42,42,42,42,]),'argument_list_in_definition':([28,156,162,],[105,210,105,]),'super':([20,154,],[29,198,]),'square_block':([199,209,],[234,236,]),'primary_no_new_array':([23,45,55,56,63,87,99,117,119,122,123,124,125,130,134,135,136,137,138,139,140,146,147,148,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'argument_list':([149,171,],[188,188,]),'left_hand_side':([23,45,117,180,219,222,224,232,258,273,278,],[66,66,66,66,66,66,66,66,66,66,66,]),'class_body_declarations_extras':([22,],[34,]),'add_expression':([23,45,63,87,117,119,122,123,124,125,130,134,135,138,139,140,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[69,69,69,69,69,69,165,166,167,168,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'expression_statement':([23,45,117,180,219,222,224,232,258,273,278,],[88,88,88,88,88,88,88,88,88,88,88,]),'and_expression':([23,45,63,87,117,119,130,134,135,149,150,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[71,71,71,71,71,71,170,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'type_of_variable':([33,238,],[112,112,]),'class_body':([13,],[21,]),'statement_without_trailing_substatement':([23,45,117,180,219,222,224,232,258,273,278,],[74,74,74,74,241,74,74,74,74,241,241,]),'block_begin':([15,23,45,117,180,219,222,224,232,258,273,278,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'semi':([23,45,81,87,110,117,145,180,219,222,224,232,258,273,278,],[76,76,143,144,159,76,184,76,76,76,76,76,76,76,76,]),'mult_expression':([23,45,63,87,117,119,122,123,124,125,130,134,135,136,137,138,139,140,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[93,93,93,93,93,93,93,93,93,93,93,93,93,175,176,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'func_begin_bracket':([115,],[162,]),'method_invocation':([23,45,55,56,63,87,99,117,119,122,123,124,125,130,134,135,136,137,138,139,140,146,147,148,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[78,78,128,128,128,128,128,78,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,78,128,78,78,78,128,78,128,128,78,128,128,78,78,]),'equality_expression':([23,45,63,87,117,119,130,134,135,138,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[79,79,79,79,79,79,79,79,79,79,79,79,193,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'for_untilTo':([261,],[270,]),'block_end':([34,49,163,],[114,121,218,]),'declaration_keyword_extras':([152,],[196,]),'statement_expression':([23,45,117,180,219,222,224,232,258,273,278,],[81,81,81,81,81,81,81,81,81,81,81,]),'class_instance_creation_expression':([23,45,117,160,180,219,222,224,232,258,273,278,],[82,82,82,213,82,82,82,82,82,82,82,82,]),'argument':([28,156,162,],[103,103,103,]),'import_declaration':([0,3,],[6,7,]),'unary_expression':([23,45,55,56,63,87,99,117,119,122,123,124,125,130,134,135,136,137,138,139,140,146,147,148,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[83,83,126,129,83,83,153,83,83,83,83,83,83,83,83,83,83,83,83,83,83,185,186,187,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'assignment':([23,45,117,180,219,222,224,232,258,273,278,],[85,85,85,85,85,85,85,85,85,85,85,]),'while_statement':([23,45,117,180,219,222,224,232,258,273,278,],[86,86,86,86,86,86,86,86,86,86,86,]),'variable_rhs':([160,],[215,]),'block_statement':([23,45,117,180,224,],[89,120,89,89,120,]),'switch_body':([80,],[141,]),'array_invocation_right':([23,45,55,56,63,87,99,117,119,122,123,124,125,130,134,135,136,137,138,139,140,146,147,148,149,150,151,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'object_declaration':([4,9,],[14,14,]),'if_then_statement':([23,45,117,180,219,222,224,232,258,273,278,],[77,77,77,77,77,77,77,77,77,77,77,]),'ambiguous_name':([5,23,45,55,56,59,63,87,99,117,119,122,123,124,125,130,134,135,136,137,138,139,140,146,147,148,149,150,151,160,169,171,180,182,214,219,222,224,229,232,250,252,258,259,270,273,278,],[16,94,94,127,127,131,127,127,127,94,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,94,127,131,94,94,94,127,94,127,127,94,127,127,94,94,]),'xor_expression':([23,45,63,87,117,119,130,134,135,138,149,150,160,169,171,180,182,219,222,224,229,232,250,252,258,259,270,273,278,],[95,95,95,95,95,95,95,95,95,177,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'for_variables':([152,],[194,]),'local_variable_and_type':([33,238,],[111,111,]),'class_and_objects_declaration':([4,9,],[11,19,]),'if_then_else_statement_no_short_if':([219,273,278,],[244,244,244,]),'import_declarations_extras':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> compilation_unit","S'",1,None,None,None),
  ('compilation_unit -> import_declarations_extras classes_objects_list','compilation_unit',2,'p_compilation_unit','parser.py',74),
  ('import_declarations_extras -> import_declarations','import_declarations_extras',1,'p_import_declarations_extras','parser.py',84),
  ('import_declarations_extras -> empty','import_declarations_extras',1,'p_import_declarations_extras','parser.py',85),
  ('import_declarations -> import_declaration','import_declarations',1,'p_import_declarations','parser.py',89),
  ('import_declarations -> import_declarations import_declaration','import_declarations',2,'p_import_declarations','parser.py',90),
  ('import_declaration -> K_IMPORT ambiguous_name','import_declaration',2,'p_import_declaration','parser.py',98),
  ('classes_objects_list -> classes_objects_list class_and_objects_declaration','classes_objects_list',2,'p_classes_objects_list','parser.py',103),
  ('classes_objects_list -> class_and_objects_declaration','classes_objects_list',1,'p_classes_objects_list','parser.py',104),
  ('class_and_objects_declaration -> object_declaration','class_and_objects_declaration',1,'p_class_and_objects_declaration','parser.py',112),
  ('class_and_objects_declaration -> class_declaration','class_and_objects_declaration',1,'p_class_and_objects_declaration','parser.py',113),
  ('object_declaration -> ObjectDeclare block','object_declaration',2,'p_object_declaration','parser.py',119),
  ('ObjectDeclare -> K_OBJECT IDENTIFIER super','ObjectDeclare',3,'p_object_declare','parser.py',124),
  ('class_type -> IDENTIFIER','class_type',1,'p_class_type','parser.py',132),
  ('class_type -> K_WITH class_type','class_type',2,'p_class_type','parser.py',133),
  ('super -> K_EXTENDS class_type','super',2,'p_super','parser.py',143),
  ('super -> empty','super',1,'p_super','parser.py',144),
  ('class_declaration -> class_header class_body','class_declaration',2,'p_class_declaration','parser.py',154),
  ('class_header -> K_CLASS IDENTIFIER class_begin_bracket argument_header RPAREN super','class_header',6,'p_class_header','parser.py',159),
  ('class_begin_bracket -> LPAREN','class_begin_bracket',1,'p_class_begin_bracket','parser.py',169),
  ('class_body -> BLOCK_BEGIN class_body_declarations_extras block_end','class_body',3,'p_class_body','parser.py',179),
  ('block_end -> BLOCK_END','block_end',1,'p_block_end','parser.py',184),
  ('class_body_declarations_extras -> class_body_declarations','class_body_declarations_extras',1,'p_class_body_declarations_extras','parser.py',193),
  ('class_body_declarations_extras -> empty','class_body_declarations_extras',1,'p_class_body_declarations_extras','parser.py',194),
  ('class_body_declarations -> class_body_declaration','class_body_declarations',1,'p_class_body_declarations','parser.py',198),
  ('class_body_declarations -> class_body_declarations class_body_declaration','class_body_declarations',2,'p_class_body_declarations','parser.py',199),
  ('class_body_declaration -> local_variable','class_body_declaration',1,'p_class_body_declaration','parser.py',207),
  ('class_body_declaration -> method_declaration','class_body_declaration',1,'p_class_body_declaration','parser.py',208),
  ('argument_header -> argument_list_in_definition','argument_header',1,'p_argument_header','parser.py',216),
  ('argument_header -> empty','argument_header',1,'p_argument_header','parser.py',217),
  ('argument_list_in_definition -> argument','argument_list_in_definition',1,'p_argument_list_in_definition','parser.py',234),
  ('argument_list_in_definition -> argument COMMA argument_list_in_definition','argument_list_in_definition',3,'p_argument_list_in_definition','parser.py',235),
  ('argument -> IDENTIFIER COLON type','argument',3,'p_argument','parser.py',244),
  ('semi -> SEMI_COLON','semi',1,'p_semi','parser.py',262),
  ('semi -> NEWLINE','semi',1,'p_semi','parser.py',263),
  ('method_declaration -> method_header method_body','method_declaration',2,'p_method_declaration','parser.py',269),
  ('method_header -> K_DEF IDENTIFIER func_begin_bracket argument_header RPAREN COLON method_return_type ASSIGN','method_header',8,'p_method_header','parser.py',275),
  ('method_header -> K_DEF IDENTIFIER func_begin_bracket argument_header RPAREN ASSIGN','method_header',6,'p_method_header','parser.py',276),
  ('method_header -> K_DEF IDENTIFIER func_begin_bracket argument_header RPAREN','method_header',5,'p_method_header','parser.py',277),
  ('method_return_type -> type','method_return_type',1,'p_method_return_type','parser.py',305),
  ('func_begin_bracket -> LPAREN','func_begin_bracket',1,'p_func_begin_bracket','parser.py',310),
  ('method_body -> BLOCK_BEGIN block_body block_end','method_body',3,'p_method_body','parser.py',320),
  ('expression -> or_expression','expression',1,'p_expression','parser.py',331),
  ('or_expression -> and_expression','or_expression',1,'p_or_expression','parser.py',336),
  ('or_expression -> or_expression OR and_expression','or_expression',3,'p_or_expression','parser.py',337),
  ('and_expression -> xor_expression','and_expression',1,'p_and_expression','parser.py',347),
  ('and_expression -> and_expression AND xor_expression','and_expression',3,'p_and_expression','parser.py',348),
  ('xor_expression -> equality_expression','xor_expression',1,'p_xor_expression','parser.py',358),
  ('xor_expression -> xor_expression XOR equality_expression','xor_expression',3,'p_xor_expression','parser.py',359),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',369),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','parser.py',370),
  ('equality_expression -> equality_expression NEQUAL relational_expression','equality_expression',3,'p_equality_expression','parser.py',371),
  ('relational_expression -> add_expression','relational_expression',1,'p_relational_expression','parser.py',389),
  ('relational_expression -> relational_expression GREATER_THAN add_expression','relational_expression',3,'p_relational_expression','parser.py',390),
  ('relational_expression -> relational_expression GREATER_THAN_EQUAL add_expression','relational_expression',3,'p_relational_expression','parser.py',391),
  ('relational_expression -> relational_expression LESS_THAN add_expression','relational_expression',3,'p_relational_expression','parser.py',392),
  ('relational_expression -> relational_expression LESS_THAN_EQUAL add_expression','relational_expression',3,'p_relational_expression','parser.py',393),
  ('add_expression -> mult_expression','add_expression',1,'p_add_expression','parser.py',421),
  ('add_expression -> add_expression PLUS mult_expression','add_expression',3,'p_add_expression','parser.py',422),
  ('add_expression -> add_expression MINUS mult_expression','add_expression',3,'p_add_expression','parser.py',423),
  ('mult_expression -> unary_expression','mult_expression',1,'p_mult_expression','parser.py',434),
  ('mult_expression -> mult_expression DIVIDE unary_expression','mult_expression',3,'p_mult_expression','parser.py',435),
  ('mult_expression -> mult_expression MULT unary_expression','mult_expression',3,'p_mult_expression','parser.py',436),
  ('mult_expression -> mult_expression MOD unary_expression','mult_expression',3,'p_mult_expression','parser.py',437),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',448),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',449),
  ('unary_expression -> postfix_not_expression','unary_expression',1,'p_unary_expression','parser.py',450),
  ('postfix_not_expression -> postfix_expression','postfix_not_expression',1,'p_postfix_not_expression','parser.py',462),
  ('postfix_not_expression -> NOT unary_expression','postfix_not_expression',2,'p_postfix_not_expression','parser.py',463),
  ('postfix_expression -> primary_no_new_array','postfix_expression',1,'p_postfix_expression1','parser.py',473),
  ('postfix_expression -> ambiguous_name','postfix_expression',1,'p_postfix_expression2','parser.py',477),
  ('primary_no_new_array -> literal','primary_no_new_array',1,'p_primary_no_new_array','parser.py',490),
  ('primary_no_new_array -> method_invocation','primary_no_new_array',1,'p_primary_no_new_array','parser.py',491),
  ('primary_no_new_array -> LPAREN expression RPAREN','primary_no_new_array',3,'p_primary_no_new_array','parser.py',492),
  ('primary_no_new_array -> array_invocation_right','primary_no_new_array',1,'p_primary_no_new_array','parser.py',493),
  ('literal -> STRING','literal',1,'p_literal','parser.py',502),
  ('literal -> CHAR','literal',1,'p_literal','parser.py',503),
  ('literal -> K_FALSE','literal',1,'p_literal','parser.py',504),
  ('literal -> K_TRUE','literal',1,'p_literal','parser.py',505),
  ('literal -> K_NULL','literal',1,'p_literal','parser.py',506),
  ('literal -> FLOAT','literal',1,'p_literal','parser.py',507),
  ('literal -> INT','literal',1,'p_literal','parser.py',508),
  ('array_invocation_right -> ambiguous_name SQUARE_BEGIN expression SQUARE_END','array_invocation_right',4,'p_array_invocation_right','parser.py',532),
  ('method_invocation -> ambiguous_name LPAREN argument_list_extras RPAREN','method_invocation',4,'p_method_invocation','parser.py',548),
  ('argument_list_extras -> argument_list','argument_list_extras',1,'p_argument_list_extras','parser.py',581),
  ('argument_list_extras -> empty','argument_list_extras',1,'p_argument_list_extras','parser.py',582),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',591),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',592),
  ('ambiguous_name -> IDENTIFIER','ambiguous_name',1,'p_ambiguous_name','parser.py',601),
  ('ambiguous_name -> ambiguous_name DOT IDENTIFIER','ambiguous_name',3,'p_ambiguous_name','parser.py',602),
  ('block -> block_begin block_body block_end','block',3,'p_block','parser.py',618),
  ('block_begin -> BLOCK_BEGIN','block_begin',1,'p_block_begin','parser.py',623),
  ('block_body -> block_statement_list','block_body',1,'p_block_body','parser.py',634),
  ('block_body -> empty','block_body',1,'p_block_body','parser.py',635),
  ('block_statement_list -> block_statement','block_statement_list',1,'p_block_statement_list','parser.py',639),
  ('block_statement_list -> block_statement_list block_statement','block_statement_list',2,'p_block_statement_list','parser.py',640),
  ('block_statement -> local_variable','block_statement',1,'p_block_statement','parser.py',648),
  ('block_statement -> method_declaration','block_statement',1,'p_block_statement','parser.py',649),
  ('block_statement -> statement','block_statement',1,'p_block_statement','parser.py',650),
  ('variable_header -> K_VAL','variable_header',1,'p_variable_header','parser.py',654),
  ('variable_header -> K_VAR','variable_header',1,'p_variable_header','parser.py',655),
  ('local_variable -> variable_header variable_body semi','local_variable',3,'p_local_variable','parser.py',661),
  ('variable_body -> local_variable_and_type ASSIGN variable_rhs','variable_body',3,'p_variable_body','parser.py',667),
  ('variable_body -> local_variable_and_type ASSIGN variable_rhs COMMA variable_body','variable_body',5,'p_variable_body','parser.py',668),
  ('type_of_variable -> IDENTIFIER COLON type','type_of_variable',3,'p_type_of_variable','parser.py',682),
  ('variable_rhs -> expression','variable_rhs',1,'p_variable_rhs','parser.py',699),
  ('variable_rhs -> array_initializer','variable_rhs',1,'p_variable_rhs','parser.py',700),
  ('variable_rhs -> class_instance_creation_expression','variable_rhs',1,'p_variable_rhs','parser.py',701),
  ('local_variable_and_type -> type_of_variable','local_variable_and_type',1,'p_local_variable_and_type1','parser.py',705),
  ('local_variable_and_type -> IDENTIFIER','local_variable_and_type',1,'p_local_variable_and_type2','parser.py',709),
  ('array_initializer -> K_NEW K_ARRAY SQUARE_BEGIN type SQUARE_END LPAREN INT RPAREN','array_initializer',8,'p_array_initializer','parser.py',728),
  ('class_instance_creation_expression -> K_NEW ambiguous_name LPAREN argument_list_extras RPAREN','class_instance_creation_expression',5,'p_class_instance_creation_expression','parser.py',744),
  ('statement -> statement_without_trailing_substatement','statement',1,'p_statement','parser.py',750),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',751),
  ('statement -> if_then_else_statement','statement',1,'p_statement','parser.py',752),
  ('statement -> if_then_statement','statement',1,'p_statement','parser.py',753),
  ('statement -> for_loop','statement',1,'p_statement','parser.py',754),
  ('if_then_statement -> K_IF LPAREN expression RPAREN statement','if_then_statement',5,'p_if_then_statement','parser.py',758),
  ('if_then_else_statement -> K_IF LPAREN expression RPAREN statement_no_short_if K_ELSE statement','if_then_else_statement',7,'p_if_then_else_statement','parser.py',770),
  ('if_then_else_statement_no_short_if -> K_IF LPAREN expression RPAREN statement_no_short_if K_ELSE statement_no_short_if','if_then_else_statement_no_short_if',7,'p_if_then_else_statement_no_short_if','parser.py',787),
  ('statement_no_short_if -> statement_without_trailing_substatement','statement_no_short_if',1,'p_statement_no_short_if','parser.py',804),
  ('statement_no_short_if -> if_then_else_statement_no_short_if','statement_no_short_if',1,'p_statement_no_short_if','parser.py',805),
  ('statement_without_trailing_substatement -> block','statement_without_trailing_substatement',1,'p_statement_without_trailing_substatement','parser.py',811),
  ('statement_without_trailing_substatement -> switch','statement_without_trailing_substatement',1,'p_statement_without_trailing_substatement','parser.py',812),
  ('statement_without_trailing_substatement -> expression_statement','statement_without_trailing_substatement',1,'p_statement_without_trailing_substatement','parser.py',813),
  ('statement_without_trailing_substatement -> blank_statement','statement_without_trailing_substatement',1,'p_statement_without_trailing_substatement','parser.py',814),
  ('statement_without_trailing_substatement -> return_statement','statement_without_trailing_substatement',1,'p_statement_without_trailing_substatement','parser.py',815),
  ('blank_statement -> semi','blank_statement',1,'p_blank_statement','parser.py',822),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',826),
  ('expression_statement -> statement_expression semi','expression_statement',2,'p_expression_statement','parser.py',830),
  ('statement_expression -> assignment','statement_expression',1,'p_statement_expression','parser.py',835),
  ('statement_expression -> method_invocation','statement_expression',1,'p_statement_expression','parser.py',836),
  ('statement_expression -> class_instance_creation_expression','statement_expression',1,'p_statement_expression','parser.py',837),
  ('assignment -> left_hand_side ASSIGN or_expression','assignment',3,'p_assignment1','parser.py',843),
  ('assignment -> ambiguous_name SQUARE_BEGIN expression SQUARE_END ASSIGN or_expression','assignment',6,'p_assignment2','parser.py',849),
  ('left_hand_side -> ambiguous_name','left_hand_side',1,'p_left_hand_side','parser.py',865),
  ('switch -> switch_header switch_body','switch',2,'p_switch','parser.py',879),
  ('switch_header -> expression K_MATCH','switch_header',2,'p_switch_header','parser.py',891),
  ('switch_body -> BLOCK_BEGIN multiple_inner_switch_statement BLOCK_END','switch_body',3,'p_switch_body','parser.py',896),
  ('multiple_inner_switch_statement -> single_inner_switch_statement','multiple_inner_switch_statement',1,'p_multiple_inner_switch_statement','parser.py',914),
  ('multiple_inner_switch_statement -> multiple_inner_switch_statement single_inner_switch_statement','multiple_inner_switch_statement',2,'p_multiple_inner_switch_statement','parser.py',915),
  ('single_inner_switch_statement -> single_switch_statement_header single_switch_statement_body','single_inner_switch_statement',2,'p_single_inner_switch_statement','parser.py',939),
  ('single_switch_statement_body -> expression','single_switch_statement_body',1,'p_single_switch_statement_body','parser.py',943),
  ('single_switch_statement_body -> block_statement_list','single_switch_statement_body',1,'p_single_switch_statement_body','parser.py',944),
  ('single_switch_statement_header -> K_CASE expression IMPLIES','single_switch_statement_header',3,'p_single_switch_statement_header','parser.py',948),
  ('while_statement -> K_WHILE LPAREN expression RPAREN statement','while_statement',5,'p_while_statement','parser.py',955),
  ('for_loop -> K_FOR LPAREN for_variables RPAREN statement','for_loop',5,'p_for_loop','parser.py',970),
  ('for_variables -> declaration_keyword_extras IDENTIFIER IN expression for_untilTo expression','for_variables',6,'p_for_variables','parser.py',996),
  ('declaration_keyword_extras -> variable_header','declaration_keyword_extras',1,'p_declaration_keyword_extras','parser.py',1007),
  ('declaration_keyword_extras -> empty','declaration_keyword_extras',1,'p_declaration_keyword_extras','parser.py',1008),
  ('for_untilTo -> K_UNTIL','for_untilTo',1,'p_for_untilTo','parser.py',1012),
  ('for_untilTo -> K_TO','for_untilTo',1,'p_for_untilTo','parser.py',1013),
  ('return_statement -> K_RETURN expression semi','return_statement',3,'p_return_statement','parser.py',1024),
  ('return_statement -> K_RETURN semi','return_statement',2,'p_return_statement','parser.py',1025),
  ('type -> basic_type','type',1,'p_type','parser.py',1037),
  ('type -> array_datatype','type',1,'p_type','parser.py',1038),
  ('basic_type -> K_CHAR','basic_type',1,'p_basic_type','parser.py',1042),
  ('basic_type -> K_UNIT','basic_type',1,'p_basic_type','parser.py',1043),
  ('basic_type -> K_FLOAT','basic_type',1,'p_basic_type','parser.py',1044),
  ('basic_type -> K_STRING','basic_type',1,'p_basic_type','parser.py',1045),
  ('basic_type -> K_BOOLEAN','basic_type',1,'p_basic_type','parser.py',1046),
  ('basic_type -> K_INT','basic_type',1,'p_basic_type','parser.py',1047),
  ('array_datatype -> K_ARRAY square_block','array_datatype',2,'p_array_datatype','parser.py',1053),
  ('array_datatype -> K_LIST square_block','array_datatype',2,'p_array_datatype','parser.py',1054),
  ('square_block -> SQUARE_BEGIN type SQUARE_END','square_block',3,'p_square_block','parser.py',1059),
]
